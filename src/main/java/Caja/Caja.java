/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Caja;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC-HOGAR
 */
public class Caja extends javax.swing.JFrame {

    public String detalle;
    public String monto;
    public String observaciones;
    public Date fecha;

    //Creamos la conexion a la base de datos
    //Declaramos una coneccion en null al igual que un statement tambien en null
    Connection connection = null;
    Statement statement = null;
    //Creamos un objeto tabla, un modelo de tabla para trabjar con el, para colocar las consultas en el datatable
    DefaultTableModel modelo = new DefaultTableModel();

    private Connection connect() {
        //Inicializamos la conexion
        Connection conn = null;
        try {
            //Pasamos el nombre de la base de datos a la cual nos vamos a conectar
            conn = DriverManager.getConnection("jdbc:sqlite:dbCaja.db");
        } catch (SQLException e) {
            //Mandamos un mensaje de error a la consola en caso de que aparezca uno
            System.out.println(e.getMessage());
        }
        //Por ultimo retornamos la conexion
        return conn;
    }

    public Caja() {
        initComponents();
        //Para que se coloque en el centro la ventana
        this.setLocationRelativeTo(null);
        //Colocamos para desactivar el boton de maximizar en la ventana
        this.setResizable(false);
        //Asigno radio butons al grupo
        buttonGroup1.add(radioEgreso);
        buttonGroup1.add(radioIngreso);
        buttonGroup2.add(radioMp);
        buttonGroup2.add(radioEfectivo);
        //Removemos los elementos por defecto del combobox
        comboDetalle.removeAllItems();
        //Ejecutamos el metodo de traer elementos de la tabla de datos y lo guardamos dentro del combobox al iniciar el programa
        this.traerElementosDtos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        radioEgreso = new javax.swing.JRadioButton();
        radioIngreso = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textMonto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        guardar = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        comboDetalle = new javax.swing.JComboBox<>();
        radioMp = new javax.swing.JRadioButton();
        radioEfectivo = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        tableData = new javax.swing.JMenuItem();
        itemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        radioEgreso.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioEgreso.setText("Egreso");
        jPanel1.add(radioEgreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 80, -1));

        radioIngreso.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioIngreso.setText("Ingreso");
        jPanel1.add(radioIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, -1, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Detalle");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Monto");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, -1));

        textMonto.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel1.add(textMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 150, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Observaciones");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 342, 150));

        guardar.setBackground(new java.awt.Color(204, 0, 0));
        guardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        guardar.setForeground(new java.awt.Color(255, 255, 255));
        guardar.setText("GUARDAR");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        jPanel1.add(guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 120, -1));

        salir.setBackground(new java.awt.Color(204, 0, 0));
        salir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        salir.setForeground(new java.awt.Color(255, 255, 255));
        salir.setText("SALIR");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        jPanel1.add(salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 120, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("CAJA DIARIA");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, -1, -1));

        comboDetalle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(comboDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 150, 30));

        radioMp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioMp.setText("MP");
        jPanel1.add(radioMp, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 80, -1));

        radioEfectivo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioEfectivo.setText("Efectivo");
        jPanel1.add(radioEfectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setText("Archivo");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Editar Elemento de la caja");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem5.setText("Agregar elemento a detalle");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem3.setText("Eliminar registro");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Buscar por fecha");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        tableData.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        tableData.setText("Buscar por detalle");
        tableData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableDataActionPerformed(evt);
            }
        });
        jMenu1.add(tableData);

        itemSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        itemSalir.setText("Salir");
        itemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalirActionPerformed(evt);
            }
        });
        jMenu1.add(itemSalir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Guardar infor en la base de datos
    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed

        //Seleccionamos y guardamos en una variable el detalle del combobox
        detalle = (String) comboDetalle.getSelectedItem();
        //Obtenemos el monto del textField monto
        monto = textMonto.getText();
        //Lo parseamos a float y lo guardamos en otra variable
        float valor = Float.parseFloat(monto);
        observaciones = textArea.getText();
        //Creamos las fechas como java util la cual toma la fecha actual del sistema y las transformamos en formato sql para la base de datos
        //Las fechas deben estar en formato sql date, por esto primero obtengo la fecha del sistema mediante util date y luego con esa fecha creo un nuevo objeto sql date y lo envio asi a la base de datos, donde en esta se guarda en formato timestamp
        java.util.Date d = new java.util.Date();
        java.sql.Date fecha = new java.sql.Date(d.getTime());
        //SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");                        

        try {
            //CONECTA A LA BD
            connection = this.connect();
            //Iniciamos el statement de la conexion
            statement = connection.createStatement();
            if (radioEgreso.isSelected()) {
                //Creo statement para instruccion sql
                PreparedStatement pt = connection.prepareStatement("INSERT INTO caja (fecha,egreso,detalle,observacion,mp) VALUES(?,?,?,?,?) ");
                if (radioMp.isSelected()) {
                    pt.setDate(1, fecha);
                    pt.setFloat(2, valor);
                    pt.setString(3, detalle);
                    pt.setString(4, observaciones.toLowerCase());
                    pt.setInt(5, 1);
                } else if (radioEfectivo.isSelected()) {
                    pt.setDate(1, fecha);
                    pt.setFloat(2, valor);
                    pt.setString(3, detalle);
                    pt.setString(4, observaciones.toLowerCase());
                    pt.setInt(5, 0);
                } else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar un medio MP/Efectivo");
                }
                pt.executeUpdate();
                JOptionPane.showMessageDialog(null, "REGISTRO EXITOSO");
                textArea.setText("");
                textMonto.setText("");
            } else if (radioIngreso.isSelected()) {
                PreparedStatement pt = connection.prepareStatement("INSERT INTO caja (fecha,ingreso,detalle,observacion,mp) VALUES(?,?,?,?,?) ");
                if (radioMp.isSelected()) {
                    pt.setDate(1, fecha);
                    pt.setFloat(2, valor);
                    pt.setString(3, detalle);
                    pt.setString(4, observaciones.toLowerCase());
                    pt.setInt(5, 1);
                } else if (radioEfectivo.isSelected()) {
                    pt.setDate(1, fecha);
                    pt.setFloat(2, valor);
                    pt.setString(3, detalle);
                    pt.setString(4, observaciones.toLowerCase());
                    pt.setInt(5, 0);
                } else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar un medio MP/Efectivo");
                }
                pt.executeUpdate();
                JOptionPane.showMessageDialog(null, "REGISTRO EXITOSO");
                textArea.setText("");
                textMonto.setText("");

            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar si es ingreso/egreso");
            }

        } catch (SQLException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Error: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
        } finally {
            //Al finalizar cerramos la conexion
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                // connection close failed. en el caso de que haya un error en la conexion
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
            }

        }
    }//GEN-LAST:event_guardarActionPerformed

    //Metodo que trae los datos de la base de datos y los mete dentro del combobox
    public void traerElementosDtos() {
        try {
            //CONECTA A LA BD
            connection = this.connect();
            //Iniciamos el statement de la conexion
            statement = connection.createStatement();

            //Traemos todo de la base de datos de la tabla de datos
            PreparedStatement pt = connection.prepareStatement("SELECT detalle FROM dtos");
            ResultSet rs = pt.executeQuery();

            while (rs.next()) {
                //Agregamos cada elemento traido de la tabla de datos al combo box de detalle
                comboDetalle.addItem(rs.getString("detalle"));
            }

        } catch (SQLException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Error: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
        } finally {
            //Al finalizar cerramos la conexion
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                // connection close failed. en el caso de que haya un error en la conexion
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
            }
        }
    }

    //Boton de salir
    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_salirActionPerformed

    //Menu de salir
    private void itemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_itemSalirActionPerformed

    //Buscar por detalle menu de opciones
    private void tableDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableDataActionPerformed
        // TODO add your handling code here:
        //Hago visible la ventana de busqueda por detalle primero definiendo el objeto o instancia y luego llamo al metodo para hacer visible
        BusquedaDetalle detalle = new BusquedaDetalle();
        detalle.setVisible(true);
        //Cierro la ventana actual
        this.dispose();

    }//GEN-LAST:event_tableDataActionPerformed

    //Busqueda por Fecha del menu de opciones
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        BusquedaFecha BFecha = new BusquedaFecha();
        BFecha.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    //Editar entradas    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        EditarRegistros rg = new EditarRegistros();
        rg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    //Boton de eliminar Registro
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        EliminarRegistros del = new EliminarRegistros();
        del.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    //Agregar elementos a la lista de detalle
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        //Insertamos un elemento camturado con un showinputdiagog en una variable string
        String elemento = JOptionPane.showInputDialog("Inserte nuevo elemento para la lista de detalle").toLowerCase();
        if (!elemento.equals("")) {
            JOptionPane.showMessageDialog(null, "Elemento agregado correctamente");
        }
        try {
            connection = this.connect();
            statement = connection.createStatement();
            //Creamos el query para agregar el nuevo elemento de detalle 
            PreparedStatement pt = connection.prepareStatement("INSERT INTO dtos (detalle) VALUES(?)");
            //Agregamos el elemento de detalle
            pt.setString(1, elemento);
            pt.executeUpdate();

        } catch (SQLException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Error: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
        } finally {
            //Al finalizar cerramos la conexion
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                // connection close failed. en el caso de que haya un error en la conexion
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
            }
        }

        comboDetalle.removeAllItems();
        //Ejecutamos el metodo luego de agregar el elemento para que aparezca dentro del combobox
        this.traerElementosDtos();

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Caja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Caja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Caja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Caja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> comboDetalle;
    private javax.swing.JButton guardar;
    private javax.swing.JMenuItem itemSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioEfectivo;
    private javax.swing.JRadioButton radioEgreso;
    private javax.swing.JRadioButton radioIngreso;
    private javax.swing.JRadioButton radioMp;
    private javax.swing.JButton salir;
    private javax.swing.JMenuItem tableData;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField textMonto;
    // End of variables declaration//GEN-END:variables
}
