/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Caja;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC-HOGAR
 */
public class BusquedaDetalle extends javax.swing.JFrame {

    //Creamos la conexion a la base de datos
    //Declaramos una coneccion en null al igual que un statement tambien en null
    Connection connection = null;
    Statement statement = null;
    //Creamos un objeto tabla, un modelo de tabla para trabjar con el, para colocar las consultas en el datatable
    DefaultTableModel modelo = new DefaultTableModel();
    DateFormat f = new SimpleDateFormat("dd/MM/yyyy");

    private Connection connect() {
        //Inicializamos la conexion
        Connection conn = null;
        try {
            //Pasamos el nombre de la base de datos a la cual nos vamos a conectar
            conn = DriverManager.getConnection("jdbc:sqlite:dbCaja.db");
        } catch (SQLException e) {
            //Mandamos un mensaje de error a la consola en caso de que aparezca uno
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Error: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
        }
        //Por ultimo retornamos la conexion
        return conn;
    }

    public BusquedaDetalle() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        //Aca lo que hacemos es inicializar el modelo de la tabla con los campos que tenemos en la base de datos
        modelo.addColumn("Fecha");
        modelo.addColumn("Ingreso");
        modelo.addColumn("Egreso");
        modelo.addColumn("Observacion");
        modelo.addColumn("Detalle");
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        textDetalle = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        totalBusqueda = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, -1, -1));
        jPanel1.add(textDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 200, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 520, 282));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar por Detalle");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("TOTAL DE LA BUSQUEDA = ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, 30));

        totalBusqueda.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(totalBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, 240, 30));

        jMenu1.setText("Archivo");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem3.setText("Agregar Item");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        
        String detalle = textDetalle.getText();
        double total = 0;
        //Creamos un string de 3 columnas el cual va a contener los datos que traeremos de la consulta
        String Dato[] = new String[5];
        //Inicializamos el modelo con cero registros
        modelo.setRowCount(0);
        
        try {
            //CONECTA A LA BD
            connection = this.connect();
            //Iniciamos el statement de la conexion
            statement = connection.createStatement();
            //Le decimos al statement mediante el metodo setQueryTimeout que si se tarda mas de 20 segundo sin usar entonces se cierra la conexion 
            statement.setQueryTimeout(20);
            //QUERY QUE TRAE TODOS LOS DATOS
            //Ejecutamos el query y guardamos todo lo que nos trae dentro de un ResultSet
            //CICLO QUE LLENA TODO EL MODELO
            //Recorremos los datos que trajo la consulta y de lo asignamos a cada uno de las posiciones correspondientes del array de tipo string de 3 posiciones que llamamos Dato[]            
            if (detalle != null) {
                //Mediante la consulta y el LIKE que lo que hace es buscar coincidencia con una cadena envuelta entre los comodines %% trae las coincidencias que en este caso seran con respecto a lo que le pasemos en el txtField
                String query = "SELECT * FROM caja WHERE detalle LIKE '%" + detalle + "%'";
                ResultSet rs = statement.executeQuery(query);
                while (rs.next()) {
                    //Convertimos la fecha de time stamp a fecha con formato dado arriba, usamos la conversion de string a long por que es un dato demaciado largo par que sea integer
                    Dato[0] = f.format(Long.parseLong(rs.getString("fecha")));
                    if(rs.getString("ingreso") == null){
                        Dato[1] = "$" + "0" ;
                        Dato[2] = "$" + rs.getString("egreso");
                    }else if(rs.getString("egreso") == null){
                        Dato[1] = "$" + rs.getString("ingreso") ;
                        Dato[2] = "$" + "0";
                    }
                    Dato[3] = rs.getString("observacion");
                    Dato[4] = rs.getString("detalle");
                    //Agregamos la informacion al modelo de la tabla para mostrarlo en pantalla
                    modelo.addRow(Dato);
                    //Realizamos validacion para realizar la suma o resta y asi sacar el total de los valores de la caja teniendo en cuenta ingreso y egreso
                    if(rs.getString("ingreso") == null){
                        total = total - Double.parseDouble(rs.getString("egreso"));
                    }else if(rs.getString("egreso") == null){
                        total = total + Double.parseDouble(rs.getString("ingreso"));                        
                    }
                }
                totalBusqueda.setText("$" + String.valueOf(total));
                textDetalle.setText("");
            }
            //LLENAMOS LA TABLA CON EL MODELO
            jTable1.setModel(modelo);
            //OCULTAMOS EL ID EN LA TABLA
            //tabla.getColumn("id").setMaxWidth(50);
        } catch (SQLException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Error en la buscqueda: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
        } finally {
            //Al finalizar cerramos la conexion
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                // connection close failed. en el caso de que haya un error en la conexion
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error: \n" + e.getMessage() + "\n VUELVA A INTENTARLO");
            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    //Boton para abrir agregar item nuevamente
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Caja caja = new Caja();
        caja.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    //Boton de salir
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BusquedaDetalle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BusquedaDetalle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BusquedaDetalle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BusquedaDetalle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BusquedaDetalle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField textDetalle;
    private javax.swing.JLabel totalBusqueda;
    // End of variables declaration//GEN-END:variables
}
